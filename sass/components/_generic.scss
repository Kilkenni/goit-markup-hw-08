body {
  position: relative;

  background-color: var(--bkg-color-primary);
  color: var(--text-color-primary);

  font-family: var(--font-default), sans-serif;
  font-style: normal;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

p {
  margin: 0;
}

img {
  display: block;
  width: 100%;
  height: 100%;
  // height: auto;
  object-fit: cover;
  //object-position: center top;
}

.container {
  @include centered-block;
  padding-left: 15px;
  padding-right: 15px;
  max-width: $mobile;

  /* @media screen and (min-width: #{$tablet}) {
  }*/

  @media screen and (min-width: #{$tablet}) {
    max-width: $tablet;
  }

  @media screen and (min-width: #{$desktop}) {
    display: flex;
    justify-content: space-between;
    align-items: center;

    max-width: $desktop;

    &--flex-col {
      //flex into column
      flex-direction: column;
    }
  }
}

.container-list {
  max-width: $desktop;

  @media screen and (min-width: #{$tablet}) {
    display: flex;
    //max-width: $tablet;
    flex-wrap: wrap;

    justify-content: space-between;
    align-items: center;
  }

  // @media screen and (min-width: #{$desktop}) {
  //   max-width: $desktop;
  // }
}

.vis-hide {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
}

.inline {
  display: inline;
}

.inline-block {
  display: inline-block;
}

@mixin transition-generic($anim-property) {
  //what to animate and time (default included)
  transition-property: #{$anim-property};
  transition-timing-function: var(--anim-curve);
  transition-duration: var(--anim-time);
}

/* new default for all links */
.link {
  text-decoration: none;
  @include transition-generic("color");

  &:hover,
  &:focus {
    color: var(--accent-color);
  }
}
